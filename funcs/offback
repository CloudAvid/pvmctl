#!/bin/bash
# functions to manage offsite-backup settings

# Delete remote site from setting file
# usage: do_delrsite "config line"
do_delrsite()
{
	local rsite
	if [[ -z $1 ]]; then
		echo_usage "delrsite config_line"
		exit 1
	fi
	$sed -i -e "/${1//'/'/\/}/d" $cf_offback_rsites
}

# Delete remote site from setting file
# usage: do_addrsite "config line"
do_addrsite()
{
	if [[ -z $1 ]]; then
		echo_usage "addrsite config_line"
		exit 1
	fi
	echo "$1" >> $cf_offback_rsites
}

# Change node to backup-up offline-vms
do_choffnode()
{
	if [[ -z $1 ]]; then
		echo_usage "choffnode node_name"
		exit 1
	fi
	echo "$1" > $cf_offbacknode_4_offvm
}

# schedule a defined offback policy.
# usage: schedule_offback host weekday hour
schedule_offback()
{
	local days
	local offback_hour
	local cpos 
	local hour
	local minute
	if [[ -z $1 || -z $2 || -z $3 ]]; then
		return 1
	fi

	days="$2"
	offback_hour="$3"
	(
		flock -s 201
		$sed -i -e "/ $1$/d" $rcf_offback_sched >/dev/null 2>&1
		if [[ ! -z $days ]]; then
			if [[ $days = "all" ]]; then days="*"; fi
			if [[ ! -z $offback_hour ]]; then
				cpos=$(expr index $offback_hour ':')
				if [[ $cpos -ne "0" ]]; then
					hour=${offback_hour:0:$((cpos - 1))}
					minute=${offback_hour:$cpos}

					echo "$minute $hour * * $days root $pvm_offsite_backup $1" >> $rcf_offback_sched 
				fi
			fi
		fi
	) 201>$lck_offback_sched
	return 0
}
